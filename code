import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

file_path = 'your_stock_data.csv' 
df = pd.read_csv('/content/stock data.csv')

df = df.dropna()

df = df[['Close']]

future_days = 30  # Days you want to predict ahead
df['Prediction'] = df['Close'].shift(-future_days)

X = np.array(df.drop(['Prediction'], axis=1))[:-future_days]
y = np.array(df['Prediction'])[:-future_days]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

model = LinearRegression()
model.fit(X_train, y_train)

predictions = model.predict(X_test)
mse = mean_squared_error(y_test, predictions)
print(f"Mean Squared Error: {mse:.2f}")

X_future = df.drop(['Prediction'], axis=1)[-future_days:]
forecast = model.predict(X_future)

plt.figure(figsize=(12,6))
plt.plot(df['Close'], label='Actual Close Price')
plt.plot(np.arange(len(df)-future_days, len(df)), forecast, label='Predicted Close Price', linestyle='--')
plt.title('Stock Price Prediction (Next 30 Days)')
plt.xlabel('Days')
plt.ylabel('Close Price')
plt.legend()
plt.grid()
plt.tight_layout()
plt.show()
